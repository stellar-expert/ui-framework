function isPlainObject(value) {
    return value.toString() === '[object Object]'
}

class Serializer {
    constructor() {
        this.toml = ''
    }

    serialize(obj) {
        this.serializeValue(null, obj)
        return this.toml
    }

    serializeObject(section, obj) {
        this.writeSection(section)
        const keys = Object.keys(obj)
        for (let key of keys) {
            let value = obj[key]
            this.serializeValue(key, value)
        }
    }

    serializeArray(section, array) {
        if (array.some(v => isPlainObject(v))) {
            section = `[${section}]`
            for (let value of array) {
                this.serializeObject(section, value)
            }
        } else {
            this.toml += `\n${section}=[`
            let delimiterRequired = false
            for (let value of array) {
                if (delimiterRequired) {
                    this.toml += ','
                }
                this.serializeValue(null, value)
                delimiterRequired = true
            }
            this.toml += '\n]'
        }
    }

    serializeValue(key, value) {
        if (value instanceof Array) {
            return this.serializeArray(key, value)
        }
        if (isPlainObject(value)) {
            return this.serializeObject(key, value)
        }
        value = (value instanceof Date) ? value.toISOString() : JSON.stringify(value)
        if (key) {
            this.toml += `\n${key}=${value}`
        } else {
            this.toml += `\n${value}`
        }
    }

    writeSection(section) {
        if (this.toml) {
            this.toml += '\n'
        }
        if (section) {
            this.toml += `\n[${section}]`
        }
    }

    writeComment(comment) {
        if (this.toml) {
            this.toml += '\n'
        }
        this.toml += `# ${comment}`
    }
}


function serializeToml(props) {
    const serializer = new Serializer()
    serializer.writeComment('Generated by ANCHOR.SPACE')
    return serializer.serialize(props)
}

export {serializeToml}